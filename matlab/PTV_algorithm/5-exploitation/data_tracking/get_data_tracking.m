% INPUTs:
% set: a set images
% tr: set of trajectories (output from the function: track_particles)
%
% OUTPUT:
% This function returns a structure containing :
%     - the number of images used for the tracking
%     - the number of trajectories successfully computed
%     - an array 'dataTrajectories' containing the distribution of all the
%       trajectories computed (lifetime) 
%
% dataTrajectories(:,1) contains the lengths of the trajectories (ie the 
% number of images in which the tracked particles have been followed); 
% dataTrajectories(:,2) contains the number of trajectories having this 
% length;
% dataTrajectories(i,3:end) contains the ID of all the computed 
% trajectories having the length dataTrajectory(i,1).

function result = get_data_tracking(set, tr)

%Computing the structure
data_tracking.nbImages = set.Count;

sz = size(tr);
data_tracking.nbTrajectories = tr(sz(1,1),4);

data_tracking.dataTrajectories = zeros(set.Count,2);%tr(sz(1,1),4));

index_set = ones(set.Count,1)*3;

for i = 1:set.Count
    
    data_tracking.dataTrajectories(i,1) = set.Count-i+1;
end   
    sz = size(tr);
    changeParticle = false;
    index = 0;
    
for j = 1:sz(1)-1
    if changeParticle == false
        index = index +1;
        if (tr(j+1,4) ~= tr(j,4)) 
            changeParticle = true;
            data_tracking.dataTrajectories(set.Count - index+1,2) = data_tracking.dataTrajectories(set.Count-index+1,2) +1;
            data_tracking.dataTrajectories(set.Count - index+1,index_set(set.Count - index+1)) = tr(j,4);
            index_set(set.Count - index+1) = index_set(set.Count - index+1)+1;
        end
    end
    if changeParticle == true
         index = 0;
         changeParticle = false;
    end    
end

if changeParticle == false
    data_tracking.dataTrajectories(set.Count - index,2) = data_tracking.dataTrajectories(set.Count-index,2) +1;
    data_tracking.dataTrajectories(set.Count - index,index_set(set.Count - index)) = tr(sz(1),4);
else
    data_tracking.dataTrajectories(set.Count,2) = data_tracking.dataTrajectories(set.Count,2) +1;
    data_tracking.dataTrajectories(set.Count, index_set(set.Count)) = tr(sz(1),4);
end

result = data_tracking;

end