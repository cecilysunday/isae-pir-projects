% This function interpolates a circle given a set of coordinates.
% Least-square method is used.
%
% INPUT: an array containing a set of x and y coordinates (note that an
% input like a set of trajectories (given by the function track_particles)
% is accepted
%
% OUTPUT: an array: circle = [centerX centerY radius]

function result = interpolate_traj(traj)

sz = size(traj);
dim = sz(1);

sumX = traj(1,1);
for i=2:dim
    sumX = sumX + traj(i,1);
end

sumX2 = traj(1,1)*traj(1,1);
for i=2:dim
    sumX2 = sumX2 + traj(i,1)*traj(i,1);
end

sumX3 = traj(1,1)*traj(1,1)*traj(1,1);
for i=2:dim
    sumX3 = sumX3 + traj(i,1)*traj(i,1)*traj(i,1);
end

sumY = traj(1,2);
for i=2:dim
    sumY = sumY + traj(i,2);
end

sumY2 = traj(1,2)*traj(1,2);
for i=2:dim
    sumY2 = sumY2 + traj(i,2)*traj(i,2);
end

sumY3 = traj(1,2)*traj(1,2)*traj(1,2);
for i=2:dim
    sumY3 = sumY3 + traj(i,2)*traj(i,2)*traj(i,2);
end

sumXY = traj(1,1)*traj(1,2);
for i=2:dim
    sumXY = sumXY + traj(i,1)*traj(i,2);
end

sumXY2 = traj(1,1)*traj(1,2)*traj(1,2);
for i=2:dim
    sumXY2 = sumXY2 + traj(i,1)*traj(i,2)*traj(i,2);
end

sumX2Y = traj(1,1)*traj(1,1)*traj(1,2);
for i=2:dim
    sumX2Y = sumX2Y + traj(i,1)*traj(i,1)*traj(i,2);
end

A = dim*sumX2 - sumX*sumX;
B = dim*sumXY - sumX*sumY;
C = dim*sumY2 - sumY*sumY;
D = 0.5*(dim*sumXY2 - sumX*sumY2 + dim*sumX3 - sumX*sumX2);
E = 0.5*(dim*sumX2Y - sumY*sumX2 + dim*sumY3 - sumY*sumY2);

centerX = (D*C-B*E)/(A*C-B*B);
centerY = (A*E-B*D)/(A*C-B*B);

sumSQRT = sqrt((traj(1,1)-centerX)*(traj(1,1)-centerX)+(traj(1,2)-centerY)*(traj(1,2)-centerY));
for i=2:dim
    sumSQRT = sumSQRT + sqrt((traj(i,1)-centerX)*(traj(i,1)-centerX)+(traj(i,2)-centerY)*(traj(i,2)-centerY));
end

radius = sumSQRT/dim;

result(1,1) = centerX;
result(1,2) = centerY;
result(1,3) = radius;

end