% INPUTs
% my_set: a set of images
% data_profil_proj: the first structure given by the build_profil function
% data_profil: the 2nd structure given by the build_profil function
% data_mask: data to build a rectangular mask
% data: data used for detection (see parameters_tracking)
% time: the time you want to wait between 2 successive plots of profiles
% step: the step between 2 successive plotted profiles
% theta = angle of projection (angle of the camera)
% pixel_scale
% zero = the value (in pixel) corresponding to height = 0. This value is
% used to shift the y-axis 
%
% This function plots the profile computed in frame 1;1+step;1+2step;... 
% The plots are based  on the given data_profil_proj and data_profil. 
% Between each image, the function waits during "time" seconds.

function display_laser_profile(my_set, data_profil_proj, data_profil, data_mask, data, time,step, theta, pixel_scale, zero)

%Bead diameter (mm)
b_d = 4;

for i=1:step:my_set.Count
    
    subplot(1,2,1);
    name = ['pict_', num2str(i)];
    plot(data_profil_proj.(name)(:,1), data_profil_proj.(name)(:,2));
    xlim([0/b_d 95/b_d]);
    ylim([-data_mask(1,2)-data_mask(1,4)+zero, -data_mask(1,2)+zero]*(cos(theta)/pixel_scale));
    xlabel('bead diameter'); 
    ylabel('height of the surface (mm)');
    set(gca,'DataAspectRatio',[1,2,1]);
    
    subplot(1,2,2);
    display_particles(my_set, i, data, data_profil.(name), 1, 0);
   
    suptitle({'Radial profile of the surface' ['frame ' num2str(i)]});
    pause(time);
    
end 
hold on
end