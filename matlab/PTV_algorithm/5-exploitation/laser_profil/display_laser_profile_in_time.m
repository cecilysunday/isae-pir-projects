% INPUTs
% data_profil_proj: the first structure given by the build_profil function
% data_mask: data to build a rectangular mask
% step: the step between 2 plotted profiles; set this value to set.Count/k
% and you will have k profiles plotted
% theta = angle of projection (angle of the camera)
% pixel_scale
% zero = the value (in pixel) corresponding to height = 0. This value is
% used to shift the y-axis
% [start finish] = an interval of images (i.e. a time interval). If 
% [start finish] = [a b] then all the profiles computed between frame a and
% frame b will be displayed in the same graph.  
%
% This function plots on the same graph the profiles of different frames 
% (ie at different timesteps) with the associated legend  

function display_laser_profile_in_time(data_profil_proj, data_mask, step, theta, pixel_scale, zero, start, finish)

leg = {};
s_leg = 1;

%%BEAD DIAMETER (mm)
b_d = 4;

for i=start:step:finish
    name = ['pict_', num2str(i)];
    
    frame_number = num2str(i);
    leg{s_leg} = strcat('Frame',frame_number);
    s_leg = s_leg + 1;
    
    plot(data_profil_proj.(name)(:,1), data_profil_proj.(name)(:,2));
    xlim([0/b_d 95/b_d]);
    ylim([-data_mask(1,2)-data_mask(1,4)+zero, -data_mask(1,2)+zero]*(cos(theta)/pixel_scale));
    xlabel('bead diameter'); 
    ylabel('height of the surface (mm)');
    set(gca,'DataAspectRatio',[1,2,1]);
    hold on
    
    legend(leg, 'Location', 'bestoutside');
    s1 = 'frame';
    s2 = num2str(start);
    s3 = 'to';
    s4 = num2str(finish);
    s5 = ' ';
    suptitle({'Radial profile of the surface: time evolution';[s1 s5 s2 s5 s3 s5 s4]});
end

end