 %copy tr in the variable "result" and add to result 3 new columns : 
 %  -column nb 5 : radial speed
 %  -column nb 6 : tangential speed
 %  -column nb 7 : radius (distance between particle and center)

 %INPUTS:
 %  - tr: the set of trajectories
 %  - delta_t: the deltat_t between each frame
 %  - x0: the x-coordinate of the center of the rotation
 %  - y0: the y-coordinate of the center of the rotation
 %  - beta: this parameter specify that for a given particle p on the image 
 %    i, the velocity v(p,i)will be computed between frame i and frame 
 %    i+beta. ie: deltaT*v(p,i) = posit(p,i+beta) - posit(p,i) 
 
 %OUTPUT: result
 
function result = compute_velocity(tr,delta_t,x0,y0,beta)
    tr_part = sortrows(tr,4);
    tr = tr_part;
    nb_part = tr_part(1,4);
    s = size(tr);
    tr2 = [];
    i=1;
    j=1;
    while (i<s(1))
        if (i+beta<s(1) && tr(i+beta,4) == nb_part)
            tr2(j,1:4) = tr(i,:);
            tr2(j,7) = sqrt((x0-tr(i,1))^2 + (y0-tr(i,2))^2);
            [theta1,r1] = cart2pol(x0-tr(i,1),-tr(i,2)+y0);
            [theta2,r2] = cart2pol(x0-tr(i+beta,1),-tr(i+beta,2)+y0);
            tr2(j,5) = (r2-r1)/((beta)*delta_t);
            tr2(j,6) = r1*(theta2-theta1)/((beta)*delta_t);
            j = j+1;
        end
        i = i+1;
        
        if(tr(i,4) ~= nb_part)
            %nb_part = nb_part+1;
            nb_part = tr(i,4);
        end     
    end
    result = tr2;
end