function result = mean_velocity(alpha,tr)
    %Compute the mean velocity as a function of r, with r varying by steps 
    %of a parameter alpha. The matrix returned has 3 columns : 
    %   -first column is the radial mean speed
    %   -second column is the tangential mean speed
    %   -last column is the radius
    %In order to split tr according to different ranges of radius, tr is 
    %primarly sorted 
    tr2 = sortrows(tr,7);
    V_mean = [];
    s = size(tr2);
    s_V = 1;
    r = tr2(1,7);
    i = 1; 
   %first loop to go through the array tr
    while (i<s(1))
        r1 = r + alpha;
        %store temporary the speeds in an array 
        V_temp = [];
        s_V_temp = 0;
        %second loop stops when the radius r + alpha is reached
        while (i<s(1) && r<r1)
            V_temp(s_V_temp+1,1) = tr2(i,5);
            V_temp(s_V_temp+1,2) = tr2(i,6);
            s_V_temp = s_V_temp + 1;
            r = tr2(i+1,7);
            i = i+1;
        end
        %compute the mean velocity across the radiuses between r and
        %r+alpha
        V_mean(s_V,1) = mean(V_temp(:,1));
        V_mean(s_V,2) = mean(V_temp(:,2));
        V_mean(s_V,3) = r1 - alpha;
        r = r1;
        %increase the length of V_mean
        s_V = s_V + 1;
    end
    result = V_mean;
end